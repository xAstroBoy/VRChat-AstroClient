using RubyButtonAPI;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using VRC.Udon;
using VRC.Udon.Common.Interfaces;


namespace AstroClient.UdonExploits
{
    public static class Murder4UdonExploits
    {

                public static void InitMurderGameControllerExploits(QMNestedButton menu, float x, float y, bool btnHalf)
        {
            var main = new QMNestedButton(menu, x, y, "Game Controller Exploits", "Run Udon Events globally", null, null, null, null, btnHalf);
            main.getMainButton().SetResizeTextForBestFit(true);
            var registersub = new QMNestedButton(main, -5f, -5f, "", "");
            registersub.getMainButton().setActive(false);
            var MainScroll = new QMHalfScroll(registersub);
            var subscroll = new QMHalfScroll(main);
            new QMSingleButton(main, 0, -1, "Refresh", delegate{ MainScroll.Refresh(); subscroll.Refresh(); }, "", null, null, true);
            subscroll.SetAction(delegate
            {


                foreach (var action in UnityEngine.Object.FindObjectsOfType<UdonBehaviour>())
                {
                    if (action.gameObject.name == "Game Logic")
                    {
                        foreach (var subaction in action._eventTable)
                        {
                            var subaction_btn = new QMSingleButton(main, 0f, 0f, subaction.Key, null, (action.gameObject)?.ToString() + " Execute " + subaction.Key, null, null, true);
                            subaction_btn.setAction(new Action(() => { action.SendCustomNetworkEvent(NetworkEventTarget.All, subaction.Key); }));
                            subscroll.Add(subaction_btn);
                        }
                        break;
                    }
                }

            });
        }


        public static void InitMurder4UnfilteredNodeExploitBtn(QMNestedButton menu, float x, float y, bool btnHalf)
        {

            var submenu = new QMNestedButton(menu, x, y, "Unfiltered Node", "Run Udon Events globally", null, null, null, null, btnHalf);
            var whytfisthishere = new QMNestedButton(submenu, -5f, -5f, "", "");
            whytfisthishere.getMainButton().setActive(false);
            var MainScroll = new QMHalfScroll(whytfisthishere);
            var subscroll = new QMHalfScroll(submenu);
            new QMSingleButton(submenu, 0, -1, "Refresh", delegate
            {
                MainScroll.Refresh();
                subscroll.Refresh();
            }, "", null, null, true);
            subscroll.SetAction(delegate
            {

                    var filterstring = new List<string>();
                if (JarRoleController.JarRoleLinks.Count() != 0)
                {
                    foreach (var Component in JarRoleController.JarRoleLinks)
                    {
                        foreach (var action in Component.Node.GetComponentsInChildren<UdonBehaviour>())
                        {
                            if (action != null)
                            {
                                if (filterstring.Contains(action.gameObject.name))
                                {
                                    continue;
                                }
                                else
                                {
                                    subscroll.Add(new QMSingleButton(submenu, 0f, 0f, action.gameObject.name, delegate
                                    {
                                        MainScroll.SetAction(delegate
                                        {
                                            foreach (var subaction in action._eventTable)
                                            {
                                                var subaction_btn = new QMSingleButton(MainScroll.BaseMenu, 0f, 0f, subaction.Key, delegate
                                                {
                                                    action.SendCustomNetworkEvent(NetworkEventTarget.All, subaction.Key);
                                                }, (action.gameObject)?.ToString() + " Run " + subaction.Key, null, null, true);
                                                MainScroll.Add(subaction_btn);
                                            }
                                        });
                                        MainScroll.BaseMenu.getMainButton().getGameObject().GetComponent<UnityEngine.UI.Button>()
                                            .onClick.Invoke();
                                    }, action.interactText, null, null, true));
                                    filterstring.Add(action.gameObject.name);
                                }
                            }
                        }
                    }
                }
                else
                {
                    var NoNodesFound = new QMSingleButton(submenu, 0f, 0f, "No Nodes Found", null, "No Nodes Found", null, null, true);
                    subscroll.Add(NoNodesFound);
                }
            });
        }


        public static void InitMurder4FilteredNodeExploitBtn(QMNestedButton menu, float x, float y, bool btnHalf)
        {
            var submenu = new QMNestedButton(menu, x, y, "Filtered Nodes", "Run Udon Events globally", null, null, null, null, btnHalf);
            var whytfisthishere = new QMNestedButton(submenu, -5f, -5f, "", "");
            whytfisthishere.getMainButton().setActive(false);
            var MainScroll = new QMHalfScroll(whytfisthishere);
            var subscroll = new QMHalfScroll(submenu);
            new QMSingleButton(submenu, 0, -1, "Refresh", delegate
            {
                MainScroll.Refresh();
                subscroll.Refresh();
            }, "", null, null, true);
            subscroll.SetAction(delegate
            {
                if (JarRoleController.RoleEspComponents.Count() != 0)
                {
                    var tmplist = new List<string>(); // WHY SO SUDDENLY IT DECIDES TO HAVE MULTIPLE BUTTONS WITH THE SAME PLAYER? FFS
                    foreach (var Component in JarRoleController.RoleEspComponents)
                    {
                        if (Component != null && Component.Entry != null && Component.Node != null && Component.apiuser != null)
                        {
                            foreach (var action in Component.Node.GetComponentsInChildren<UdonBehaviour>())
                            {
                                if (action != null)
                                {
                                    if (tmplist.Contains(Component.apiuser.displayName))
                                    {
                                        continue;
                                    }
                                    else
                                    {
                                        var PlayerExploitsChoicesBtn = new QMSingleButton(submenu, 0f, 0f, Component.apiuser.displayName, delegate
                                         {
                                             MainScroll.SetAction(delegate
                                             {
                                                 foreach (var subaction in action._eventTable)
                                                 {
                                                     var subaction_btn = new QMSingleButton(MainScroll.BaseMenu, 0f, 0f, subaction.Key, delegate
                                                      {
                                                          action.SendCustomNetworkEvent(NetworkEventTarget.All, subaction.Key);
                                                      }, (action.gameObject)?.ToString() + " Run " + subaction.Key, null, null, true);


                                                     MainScroll.Add(subaction_btn);
                                                 }
                                             });
                                             MainScroll.BaseMenu.getMainButton().getGameObject().GetComponent<UnityEngine.UI.Button>()
                                                 .onClick.Invoke();
                                         }, action.interactText, null, null, true);
                                        var textcolor = Component.Murder4GetNamePlateColor();
                                        if (textcolor != null)
                                        {
                                            PlayerExploitsChoicesBtn.setTextColor(textcolor.Value);
                                        }

                                        subscroll.Add(PlayerExploitsChoicesBtn);
                                        tmplist.Add(Component.apiuser.displayName);
                                    }
                                }

                            }
                        }
                    }
                }
                else
                {
                    var NoNodesFound = new QMSingleButton(submenu, 0f, 0f, "No Nodes Found", null, "No Nodes Found", null, null, true);
                    subscroll.Add(NoNodesFound);
                }
            });
        }



    }
}
